{"remainingRequest":"/Users/desmondchew/data-processing/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/desmondchew/data-processing/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/desmondchew/data-processing/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/desmondchew/data-processing/src/components/PhoneNumberFormatter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/desmondchew/data-processing/src/components/PhoneNumberFormatter.vue","mtime":1636091558805},{"path":"/Users/desmondchew/data-processing/babel.config.js","mtime":1636003760866},{"path":"/Users/desmondchew/data-processing/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":1636003761116},{"path":"/Users/desmondchew/data-processing/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1636003761114},{"path":"/Users/desmondchew/data-processing/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1636003761256},{"path":"/Users/desmondchew/data-processing/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1636003761308}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9kZXNtb25kY2hldy9kYXRhLXByb2Nlc3Npbmcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRlc3QuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlBob25lTnVtYmVyRm9ybWF0dGVyIiwKICBwcm9wczogewogICAgbXNnOiBTdHJpbmcKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkcm9wRmlsZXM6IFtdLAogICAgICBqc29uRGF0YToge30sCiAgICAgIHByb2Nlc3NlZERhdGE6IFtdLAogICAgICBzdGF0dXM6ICcnLAogICAgICBzaG93UHJvZ3Jlc3M6IGZhbHNlCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgaXNOdW1iZXI6IGZ1bmN0aW9uIGlzTnVtYmVyKHBhcmFtKSB7CiAgICAgIHJldHVybiAvXlxkKyQvLnRlc3QocGFyYW0pOwogICAgfSwKICAgIGRlbGV0ZURyb3BGaWxlOiBmdW5jdGlvbiBkZWxldGVEcm9wRmlsZSgpIHsKICAgICAgLy90aGlzLmRyb3BGaWxlcy5zcGxpY2UoaW5kZXgsIDEpOwogICAgICB0aGlzLmRyb3BGaWxlcyA9IFtdOwogICAgICB0aGlzLnN0YXR1cyA9ICdpbml0aWFsJzsKICAgIH0sCiAgICB0b0pzb246IGZ1bmN0aW9uIHRvSnNvbigpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIC8vR2V0IHRoZSB1cGxvYWRlZCBmaWxlLCBhenVyZVVwbG9hZGVyIGlzIHRoZSByZWZlcmVuY2UgaGVyZSwgUVVwbG9hZGVyIGlzIHRoZSByZWZlcmVuY2Ugd2l0aGluIG91ciBiaXQgY29tcG9uZW50LgogICAgICAgICAgdmFyIGZpbGUgPSBfdGhpcy5kcm9wRmlsZXM7IC8vY29uc29sZS5sb2coIkZJTEUiLCBmaWxlKTsKCiAgICAgICAgICB2YXIgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CgogICAgICAgICAgZmlsZVJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICB2YXIgY3N2ID0gZS50YXJnZXQucmVzdWx0OyAvL2NvbnNvbGUubG9nKGNzdik7CgogICAgICAgICAgICB2YXIgbGluZXMgPSBjc3Yuc3BsaXQoIlxyXG4iKTsgLy9jb25zb2xlLmxvZygibGluZXMgIiwgbGluZXMpOwoKICAgICAgICAgICAgdmFyIHJlc3VsdCA9IFtdOyAvL3ZhciBoZWFkZXJzID0gbGluZXNbMF0uc3BsaXQoIiwiKTsKICAgICAgICAgICAgLy9jb25zb2xlLmxvZygiaGVhZGVycyAiLCBoZWFkZXJzKTsKCiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGluZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICB2YXIgb2JqID0ge307CiAgICAgICAgICAgICAgdmFyIGN1cnJlbnRsaW5lID0gbGluZXNbaV07IC8vY29uc29sZS5sb2coImxpbmUgIiwgaSwgIiAiLCBjdXJyZW50bGluZSk7CgogICAgICAgICAgICAgIG9iaiA9IGN1cnJlbnRsaW5lOwoKICAgICAgICAgICAgICBpZiAob2JqICE9PSBudWxsICYmIG9iaiAhPT0gIiIgJiYgb2JqICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKG9iaik7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IC8vY29uc29sZS5sb2coInJlc3VsdCAiLCByZXN1bHQpOwogICAgICAgICAgICAvL2NvbnNvbGUubG9nKCJKU09OIHN0ciIsIEpTT04uc3RyaW5naWZ5KHJlc3VsdCkpOwogICAgICAgICAgICAvL2NvbnNvbGUubG9nKCJEYXRhICIsIHRoaXMuZGF0YSk7CgoKICAgICAgICAgICAgcmVzb2x2ZShKU09OLnN0cmluZ2lmeShyZXN1bHQpKTsKICAgICAgICAgIH07CgogICAgICAgICAgZmlsZVJlYWRlci5yZWFkQXNCaW5hcnlTdHJpbmcoZmlsZSk7CiAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICByZWplY3QoZXJyKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHN0YXJ0UHJvY2Vzc2luZzogZnVuY3Rpb24gc3RhcnRQcm9jZXNzaW5nKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHN0ckpzb24sIEFyciwgaSwgZnJvbnQxLCBmcm9udDIsIGJhY2s7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMyLnNob3dQcm9ncmVzcyA9IHRydWU7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIudG9Kc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHN0ckpzb24gPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgQXJyID0gSlNPTi5wYXJzZShzdHJKc29uKTsKCiAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgQXJyLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgIGlmIChKU09OLnN0cmluZ2lmeShBcnJbaV0pID09ICJ7fSIpIHsKICAgICAgICAgICAgICAgICAgICBBcnJbaV0gPSAibnVsbCI7CiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgQXJyW2ldID0gQXJyW2ldLnJlcGxhY2UoIisiLCAiIikucmVwbGFjZSgiLSIsICIiKS5zcGxpdCgnICcpLmpvaW4oJycpOwogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd0ZXN0IGlzTnVtYmVyJywgX3RoaXMyLmlzTnVtYmVyKEFyclswXSkpOwoKICAgICAgICAgICAgICAgICAgICBpZiAoQXJyW2ldLmNoYXJBdCgwKSA9PT0gIjEiICYmIF90aGlzMi5pc051bWJlcihBcnJbaV0pKSB7CiAgICAgICAgICAgICAgICAgICAgICBmcm9udDEgPSAiNjAiOwogICAgICAgICAgICAgICAgICAgICAgQXJyW2ldID0gZnJvbnQxLmNvbmNhdChBcnJbaV0pOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoQXJyW2ldLmNoYXJBdCgwKSA9PT0gIjAiICYmIF90aGlzMi5pc051bWJlcihBcnJbaV0pKSB7CiAgICAgICAgICAgICAgICAgICAgICBmcm9udDIgPSAiNiI7CiAgICAgICAgICAgICAgICAgICAgICBBcnJbaV0gPSBmcm9udDIuY29uY2F0KEFycltpXSk7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChBcnJbaV0uY2hhckF0KDApID09PSAiNiIgJiYgX3RoaXMyLmlzTnVtYmVyKEFycltpXSkpIHsvLyBPSwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICBiYWNrID0gIiBbRXJyb3JdIjsKICAgICAgICAgICAgICAgICAgICAgIEFycltpXSA9IEFycltpXS5jb25jYXQoYmFjayk7IC8vIFdhcm5pbmcKICAgICAgICAgICAgICAgICAgICAgIC8vIGhvdyBhYm91dCBsYW5kbGluZSBudW1iZXI/CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIlVwbG9hZGVkIERhdGEiLCBBcnIpOwogICAgICAgICAgICAgICAgX3RoaXMyLnByb2Nlc3NlZERhdGEgPSBBcnI7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiUHJvY2Vzc2VkIERhdGEiLCBfdGhpczIucHJvY2Vzc2VkRGF0YSk7CiAgICAgICAgICAgICAgICBfdGhpczIuc2hvd1Byb2dyZXNzID0gZmFsc2U7CiAgICAgICAgICAgICAgICBfdGhpczIuc3RhdHVzID0gJ3Byb2Nlc3NlZCc7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZG93bmxvYWRDc3Y6IGZ1bmN0aW9uIGRvd25sb2FkQ3N2KCkgewogICAgICAvL3ZhciBqc29uU3RyaW5nID0gSlNPTi5zdHJpbmdpZnkodGhpcy5wcm9jZXNzZWREYXRhKTsKICAgICAgLy8gdmFyIGZpZWxkcyA9IE9iamVjdC5rZXlzKGpzb25bMF0pCiAgICAgIC8vIHZhciByZXBsYWNlciA9IGZ1bmN0aW9uKGtleSwgdmFsdWUpIHsgcmV0dXJuIHZhbHVlID09PSBudWxsID8gJycgOiB2YWx1ZSB9IAogICAgICAvLyB2YXIgY3N2ID0ganNvbi5tYXAoZnVuY3Rpb24ocm93KXsKICAgICAgLy8gICByZXR1cm4gZmllbGRzLm1hcChmdW5jdGlvbihmaWVsZE5hbWUpewogICAgICAvLyAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHJvd1tmaWVsZE5hbWVdLCByZXBsYWNlcikKICAgICAgLy8gICB9KS5qb2luKCcsJykKICAgICAgLy8gfSkKICAgICAgLy8gY3N2LnVuc2hpZnQoZmllbGRzLmpvaW4oJywnKSkgLy8gYWRkIGhlYWRlciBjb2x1bW4KICAgICAgLy8gY3N2ID0gY3N2LmpvaW4oJ1xyXG4nKTsKICAgICAgdmFyIGNvbnRlbnQgPSB0aGlzLnByb2Nlc3NlZERhdGEuam9pbignLCBcclxuJyk7IC8vY29uc29sZS5sb2coIGpzb25TdHJpbmcucmVwbGFjZSgnWycsJycpLnJlcGxhY2UoJ10nLCcnKSApOwogICAgICAvL3ZhciBkYXRhID0ganNvblN0cmluZy5yZXBsYWNlKCdbJywnJykucmVwbGFjZSgnXScsJycpOwoKICAgICAgdmFyIGNzdkNvbnRlbnQgPSAiZGF0YTp0ZXh0L2NzdjtjaGFyc2V0PXV0Zi04LCIgKyBjb250ZW50OwogICAgICB2YXIgZW5jb2RlZFVyaSA9IGVuY29kZVVSSShjc3ZDb250ZW50KTsKICAgICAgd2luZG93Lm9wZW4oZW5jb2RlZFVyaSk7CiAgICB9LAogICAgcmVzZXQ6IGZ1bmN0aW9uIHJlc2V0KCkgewogICAgICB0aGlzLmRyb3BGaWxlcyA9IFtdOwogICAgICB0aGlzLnN0YXR1cyA9ICdpbml0aWFsJzsKICAgIH0KICB9Cn07"},{"version":3,"sources":["PhoneNumberFormatter.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n  </div> -->\n  <section class=\"container\">\n    <h1 class=\"mb-5 has-text-weight-bold d-poppins\">Phone Number Formatter</h1>\n    <b-field v-if=\"this.dropFiles.length === 0\" class=\"m-4\">\n      <b-upload v-model=\"dropFiles\" drag-drop type=\"is-primary\">\n        <section class=\"section\">\n          <div class=\"content has-text-centered\">\n            <p>\n              <b-icon icon=\"upload\" size=\"is-large\"> </b-icon>\n            </p>\n            <p class=\"d-poppins\">Drop your files here or click to upload</p>\n          </div>\n        </section>\n      </b-upload>\n    </b-field>\n\n<b-field v-if=\"this.dropFiles.length !== 0\" class=\"m-4\"> \n  <div class=\"upload control\">\n    <div class=\"upload-draggable is-primary\">\n      <section class=\"section\">\n    <div class=\"tags\" style=\"border-radius: 1rem; justify-content: center; margin-bottom: 0rem !important; min-width: 268px; height: 88px\" v-if=\"this.dropFiles.length !== 0\">\n      <!-- <div class=\"d-poppins mr-3\">File Uploaded</div> -->\n      <span\n        style=\"padding: 1rem; border-radius: 0.5rem; border: 1px solid #cccccc;\"\n        class=\"tag is-grey d-poppins\"\n      >\n        {{ dropFiles.name }}\n        <button\n          class=\"delete is-small\"\n          type=\"button\"\n          @click=\"deleteDropFile()\"\n        ></button>\n        \n      </span>\n      <span v-if=\"status == 'processed'\">\n        <b-tag type=\"is-primary is-light d-poppins\" style=\"border-radius: 0.5rem; border: 1px solid #177d44; height: 32px;\">Completed</b-tag>\n      </span>\n      \n    </div>\n    </section>\n    </div>\n    \n    </div>\n    </b-field>\n    \n\n    <b-button\n      type=\"is-primary\"\n      class=\"d-poppins\"\n      @click=\"startProcessing\"\n      :disabled=\"this.dropFiles.length == 0 ? true : false\"\n      v-if=\"status != 'processed'\"\n    >\n      Start Processing\n    </b-button>\n\n    <b-button\n      type=\"is-primary\"\n      class=\"d-poppins\"\n      @click=\"downloadCsv\"\n      v-if=\"status == 'processed'\"\n    >\n      Download\n    </b-button>\n\n    <b-button\n      type=\"is-grey ml-3\"\n      class=\"d-poppins\"\n      @click=\"reset\"\n      v-if=\"this.dropFiles.length !== 0\"\n    >\n      Reset\n      </b-button>\n\n      <div class=\"mt-5 mx-4\" v-if=\"showProgress\">\n        <b-progress></b-progress>\n      </div>\n\n  </section>\n</template>\n\n<script>\nexport default {\n  name: \"PhoneNumberFormatter\",\n  props: {\n    msg: String,\n  },\n  data() {\n    return {\n      dropFiles: [],\n      jsonData: {},\n      processedData: [],\n      status: '',\n      showProgress: false\n    };\n  },\n  methods: {\n    isNumber(param){\n      return /^\\d+$/.test(param);\n    },\n    deleteDropFile() {\n      //this.dropFiles.splice(index, 1);\n      this.dropFiles = [];\n      this.status = 'initial'\n    },\n    toJson() {\n      return new Promise((resolve, reject) => {\n        try {\n\n          //Get the uploaded file, azureUploader is the reference here, QUploader is the reference within our bit component.\n          let file = this.dropFiles;\n\n          //console.log(\"FILE\", file);\n\n          let fileReader = new FileReader();\n          fileReader.onload = function (e) {\n            let csv = e.target.result;\n\n            //console.log(csv);\n\n            var lines = csv.split(\"\\r\\n\");\n            //console.log(\"lines \", lines);\n\n            var result = [];\n\n            //var headers = lines[0].split(\",\");\n            //console.log(\"headers \", headers);\n\n            for (var i = 0; i < lines.length; i++) {\n              var obj = {};\n              var currentline = lines[i];\n              //console.log(\"line \", i, \" \", currentline);\n\n              obj = currentline;\n\n              if (obj !== null && obj !== \"\" && obj !== undefined) {\n                result.push(obj);\n              }\n            }\n\n            //console.log(\"result \", result);\n            //console.log(\"JSON str\", JSON.stringify(result));\n            //console.log(\"Data \", this.data);\n\n            resolve(JSON.stringify(result));\n          };\n          fileReader.readAsBinaryString(file);\n        } catch (err) {\n          reject(err);\n        }\n      });\n    },\n    async startProcessing() {\n\n      this.showProgress = true;\n\n      var strJson = await this.toJson();\n      var Arr = JSON.parse(strJson);\n\n      for (let i = 0; i < Arr.length; i++) {\n\n        if (JSON.stringify(Arr[i]) == \"{}\"){\n          Arr[i] = \"null\"\n        }else{\n\n          Arr[i] = Arr[i].replace(\"+\", \"\").replace(\"-\", \"\").split(' ').join('');\n          console.log('test isNumber', this.isNumber(Arr[0]));\n\n          if (Arr[i].charAt(0) === \"1\" && this.isNumber(Arr[i]) ) {\n            let front1 = \"60\";\n            Arr[i] = front1.concat(Arr[i]);\n\n          } else if (Arr[i].charAt(0) === \"0\" && this.isNumber(Arr[i])) {\n            let front2 = \"6\";\n            Arr[i] = front2.concat(Arr[i]);\n\n          } else if (Arr[i].charAt(0) === \"6\" && this.isNumber(Arr[i])) {\n            // OK\n            \n          } else {\n            let back = \" [Error]\"\n            Arr[i] = Arr[i].concat(back);\n            // Warning\n            // how about landline number?\n          }\n        }\n      }\n\n      console.log(\"Uploaded Data\", Arr);\n      this.processedData = Arr;\n      console.log(\"Processed Data\", this.processedData);\n\n      this.showProgress = false;\n      this.status = 'processed';\n\n    },\n    downloadCsv(){\n      //var jsonString = JSON.stringify(this.processedData);\n      // var fields = Object.keys(json[0])\n      // var replacer = function(key, value) { return value === null ? '' : value } \n      // var csv = json.map(function(row){\n      //   return fields.map(function(fieldName){\n      //     return JSON.stringify(row[fieldName], replacer)\n      //   }).join(',')\n      // })\n      // csv.unshift(fields.join(',')) // add header column\n      // csv = csv.join('\\r\\n');\n      var content = this.processedData.join(', \\r\\n');\n      //console.log( jsonString.replace('[','').replace(']','') );\n\n      //var data = jsonString.replace('[','').replace(']','');\n\n      let csvContent = \"data:text/csv;charset=utf-8,\" + content;\n      var encodedUri = encodeURI(csvContent);\n      window.open(encodedUri);\n\n    },\n    reset(){\n      this.dropFiles = [];\n      this.status = 'initial'\n    }\n\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n.upload-draggable{\n  border-radius: 1rem !important;\n}\n</style>\n"],"sourceRoot":"src/components"}]}